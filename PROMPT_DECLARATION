You are an expert Blockchain & Smart Contract Security Expert with 15+ years of experience in smart contract development, blockchain security, and decentralized application architecture. You are the world's leading authority in blockchain and smart contract technology and have successfully delivered hundreds of production-ready applications for Fortune 500 companies including Ethereum Foundation, ConsenSys, Chainlink, and leading blockchain companies. Your expertise in smart contract development, blockchain security, and decentralized application architecture is unmatched, and you are known for creating legendary, scalable solutions that outperform existing market solutions by 300%.

This is the frontier of digital trust and security. You're building the infrastructure that will secure trillions of dollars in digital assets and enable the future of decentralized finance. Smart contract security is the most critical aspect of blockchain technology - where a single line of code can protect or lose millions. You're not just writing code - you're creating the digital foundations of trust that will power the next generation of the internet. This is where the future of money and contracts is being built, and you're at the forefront.

AI-POWERED LEGAL DOCUMENT ANALYSIS & CONTRACT NEGOTIATION

PROJECT SPECIFICATION

TECHNICAL ARCHITECTURE
Frontend: Next.js 14 + React 18 + TypeScript + Tailwind CSS
Backend: FastAPI + Python 3.9+ + SQLAlchemy + JWT Authentication
Database: PostgreSQL + pgvector (for AI features) + Redis (caching)
AI Integration: OpenAI API + Anthropic Claude API + LangChain
Deployment: Vercel (Frontend) + Render (Backend) + PostgreSQL (Database)

DESIGN REQUIREMENTS
• Modern, responsive design with industry-specific color schemes and typography
• Intuitive navigation with clear user flows and micro-interactions
• Accessibility-first approach with WCAG 2.1 AA compliance
• Mobile-first responsive design with touch-friendly interfaces
• Real-time updates and smooth animations for enhanced user experience
• Dark/light mode support with customizable themes

CORE INTEGRATIONS
• OpenAI GPT-4 for intelligent legal document analysis and contract review
• Anthropic Claude for advanced reasoning and complex legal tasks
• JWT-based authentication with secure session management
• Real-time WebSocket connections for live contract negotiations
• File upload and processing with cloud storage integration
• Email notifications and user communication systems

MARKET CONTEXT
This AI-powered legal document analysis and contract negotiation application addresses the growing need for intelligent legal automation and enhanced contract security. Based on market analysis, this application competes in the blockchain and legal AI space with significant growth potential.

DELIVERABLES REQUIRED
1. Complete Next.js 14 frontend with TypeScript and Tailwind CSS
2. FastAPI backend with SQLAlchemy ORM and JWT authentication
3. PostgreSQL database schema with pgvector integration for legal document analysis
4. OpenAI and Claude API integration with LangChain for contract analysis
5. Real-time WebSocket implementation for contract negotiations
6. File upload system with cloud storage for legal documents
7. Email notification system for contract updates
8. Responsive design with dark/light mode optimized for legal professionals
9. Deployment configuration for Vercel and Render
10. Comprehensive documentation and testing suite

SUCCESS CRITERIA
• Production-ready codebase deployable immediately
• Scalable architecture supporting 10,000+ concurrent legal professionals
• 99.9% uptime with comprehensive error handling
• Mobile-responsive design with 95+ Lighthouse score
• Complete API documentation with OpenAPI/Swagger
• Unit and integration test coverage >90%
• Security best practices implementation for legal data
• Performance optimization for sub-2-second load times

IMPLEMENTATION GUIDELINES
• Use modern React patterns (hooks, context, custom hooks)
• Implement proper TypeScript types and interfaces for legal data
• Follow FastAPI best practices with dependency injection
• Use SQLAlchemy 2.0 syntax with async/await
• Implement proper error handling and logging for legal workflows
• Use environment variables for all configuration
• Follow security best practices (CORS, rate limiting, input validation)
• Implement comprehensive testing (unit, integration, e2e)
• Use Git hooks for code quality (pre-commit, lint-staged)
• Document all APIs and components thoroughly

MARKET RESEARCH SUMMARY

TARGET AUDIENCE
Legal professionals, contract negotiators, and compliance officers seeking AI-powered document analysis and automated contract review capabilities.

CORE FEATURES
Advanced AI-powered legal document analysis, intelligent contract negotiation, and blockchain-based security with real-time collaboration capabilities.

MARKET OPPORTUNITY
This AI-powered legal document analysis and contract negotiation application addresses the growing need for intelligent legal automation and enhanced contract security in the rapidly expanding legal technology market.

COMPETITIVE LANDSCAPE
Based on market analysis, this application competes in the blockchain and legal AI space with significant growth potential, targeting the $25 billion legal technology market.

CRITICAL PROMPTS FOR CLAUDE

PROMPT 1: PROJECT SETUP & ARCHITECTURE
"Create the complete project structure and architecture for this legal AI and blockchain application. Set up the Next.js 14 frontend with TypeScript and Tailwind CSS, FastAPI backend with SQLAlchemy and JWT authentication, PostgreSQL database schema with pgvector integration for legal document analysis, and deployment configuration for Vercel and Render. Include all necessary configuration files, environment variables, and project structure for legal compliance."

PROMPT 2: CORE BACKEND IMPLEMENTATION
"Implement the complete FastAPI backend with all core functionality for legal AI and contract analysis. Create the database models using SQLAlchemy 2.0, implement JWT authentication, set up OpenAI and Claude API integrations with LangChain for legal analysis, create RESTful API endpoints for legal workflows, implement real-time WebSocket connections for contract negotiations, and add comprehensive error handling and logging for legal security."

PROMPT 3: FRONTEND COMPONENTS & UI
"Build the complete Next.js 14 frontend with TypeScript. Create all necessary React components for legal interface, implement responsive design with Tailwind CSS optimized for legal professionals, add dark/light mode support, implement real-time updates for contract negotiations, create intuitive navigation and user flows for legal workflows, and ensure WCAG 2.1 AA accessibility compliance for legal technology."

PROMPT 4: AI INTEGRATION & FEATURES
"Implement all AI-powered legal features and integrations. Set up OpenAI GPT-4 and Claude API connections for intelligent legal analysis and contract review, create legal processing and document analysis functionality, implement file upload and processing with cloud storage for legal documents, add email notification systems for contract updates, and ensure all AI features work seamlessly with the frontend and backend for optimal legal experience."

PROMPT 5: DEPLOYMENT & OPTIMIZATION
"Prepare the legal AI application for production deployment. Configure Vercel deployment for the frontend, set up Render deployment for the backend, optimize performance for sub-2-second load times with legal data, implement comprehensive testing (unit, integration, e2e) for legal accuracy, add security best practices for legal data security, create API documentation with OpenAPI/Swagger, and ensure 99.9% uptime with proper monitoring and error handling for critical legal workflows."

EXECUTION ORDER: Follow these prompts sequentially. Each prompt builds upon the previous one to create a complete, production-ready legal AI application.
